# 命令执行 docker-compose -f docker-compose-chatbot.yml up -d
version: '3.9'
services:
  mysql:
    image: mysql:5.7
    container_name: chatbot_mysql
    command: --default-authentication-plugin=mysql_native_password --log-bin=mysql-bin --server-id=1 --binlog-format=row --expire_logs_days=7
    restart: always
    environment:
      TZ: Asia/Singapore
      MYSQL_ROOT_PASSWORD: 123456
    networks:
      - chatbot-network
    depends_on:
      - mysql-job-dbdata
    ports:
      - "13307:3306"  # Change external port to avoid conflicts
    volumes:
      - ./mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf
      - ./mysql/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
    volumes_from:
      - mysql-job-dbdata

  mysql-job-dbdata:
    image: alpine:3.18.2
    container_name: chatbot_mysql-job-dbdata
    volumes:
      - /var/lib/mysql

  phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: chatbot_phpmyadmin
    hostname: chatbot_phpmyadmin
    ports:
      - 8898:80  # Change external port to avoid conflicts
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=123456
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - chatbot-network

  redis:
    image: redis:6.2
    container_name: chatbot_redis
    restart: always
    hostname: chatbot_redis
    privileged: true
    ports:
      - 16378:6379  # Change external port to avoid conflicts
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - chatbot-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis-admin:
    image: spryker/redis-commander:0.8.0
    container_name: chatbot_redis-admin
    hostname: chatbot_redis-commander
    restart: always
    ports:
      - 8080:8081  # Change external port to avoid conflicts
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
      - LANG=C.UTF-8
      - LANGUAGE=C.UTF-8
      - LC_ALL=C.UTF-8
    networks:
      - chatbot-network
    depends_on:
      redis:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.12.9
    container_name: chatbot_rabbitmq
    restart: always
    ports:
      - "5673:5672"  # Change external port to avoid conflicts
      - "15671:15672"  # Change external port to avoid conflicts
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    command: rabbitmq-server
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins

  zookeeper:
    image: zookeeper:3.9.0
    container_name: chatbot_zookeeper
    restart: always
    hostname: chatbot_zoo1
    ports:
      - 2182:2181  # Change external port to avoid conflicts
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
    networks:
      - chatbot-network

  canal-server:
    image: canal/canal-server:v1.1.7
    container_name: chatbot_canal-server
    restart: unless-stopped
    ports:
      - "11112:11111"  # Change external port to avoid conflicts
    volumes:
      - ./canal/instance.properties:/home/admin/canal-server/conf/example/instance.properties
    depends_on:
      - mysql
    networks:
      - chatbot-network

  canal-adapter:
    image: slpcat/canal-adapter:v1.1.5
    container_name: chatbot_canal-adapter
    restart: unless-stopped
    ports:
      - "8083:8081"  # Change external port to avoid conflicts
    volumes:
      - ./canal-adapter/application.yml:/opt/canal-adapter/conf/application.yml
      - ./canal-adapter/es7:/opt/canal-adapter/conf/es7
    depends_on:
      - canal-server
    networks:
      - chatbot-network

  elasticsearch:
    image: elasticsearch:7.17.14
    container_name: chatbot_elasticsearch
    ports:
      - '9201:9200'  # Change external port to avoid conflicts
      - '9301:9300'  # Change external port to avoid conflicts
    restart: always
    environment:
      - 'cluster.name=elasticsearch'
      - 'discovery.type=single-node'
      - "cluster.name=docker-cluster"
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    networks:
      - chatbot-network

  kibana:
    image: kibana:7.17.14
    container_name: chatbot_kibana
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - '5602:5601'  # Change external port to avoid conflicts
    links:
      - elasticsearch:es
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - 'elasticsearch.hosts=http://es:9200'
      - I18N_LOCALE=en
    networks:
      - chatbot-network
    depends_on:
      - elasticsearch

networks:
  chatbot-network:
    driver: bridge
